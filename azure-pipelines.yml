parameters:
- name: image
  displayName: 'Pool image'
  default: ubuntu-latest
  values:
  - windows-latest
  - windows-latest
  - ubuntu-latest
  - ubuntu-latest
  - macOS-latest
  - macOS-latest
- name: test
  displayName: Run Tests?
  type: boolean
  default: false

variables:
- group: "Contoso Variable Group"
- name: va
  value: $[variables.a]
- name: vb
  value: $[variables.b]
- name: vcontososecret
  value: $[variables.contososecret]

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    echo "Hello, world!"
    echo "Pool image: ${{ parameters.image }}"
    echo "Run tests? ${{ parameters.test }}"
  displayName: 'Show runtime parameter values'

- script: |
    echo "a=$(va)"
    echo "b=$(vb)"
    echo "contososecret=$(vcontososecret)"
    echo
    echo "Count up to the value of the variable group's nonsecret variable *a*:"
    for number in {1..$(va)}
    do
        echo "$number"
    done
    echo "Count up to the value of the variable group's nonsecret variable *b*:"
    for number in {1..$(vb)}
    do
        echo "$number"
    done
    echo "Count up to the value of the variable group's secret variable *contososecret*:"
    for number in {1..$(vcontososecret)}
    do
        echo "$number"
    done
    echo "Agent.MachineName = $(Agent.MachineName)"
    echo "Build.Repository.Uri = $(Build.Repository.Uri)"
    echo "Build.RequestedForId = $(Build.RequestedForId)"
    echo "Build.SourceBranch = $(Build.SourceBranch)"
    echo "Build.DefinitionName = $(Build.DefinitionName)"
    echo "##vso[task.setvariable variable=mySecretVal;issecret=true]secretvalue"
    echo "mySecretVal = $(mySecretVal)"
    echo "##vso[task.setvariable variable=myOutputJobVar;isoutput=true]this is the same job too"
    jobs:
    - job: A
      steps:
      - bash: |
     echo "##vso[task.setvariable variable=myJobVar]this is the same job"
      - bash: |
     echo "##vso[task.setvariable variable=myOutputJobVar;isoutput=true]this is the same job too"
    name: setOutput
      - bash: |
     echo $(myJobVar) 
      - bash: |
     echo $(setOutput.myOutputJobVar)  displayName: 'Test variable group variables (secret and nonsecret)'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)